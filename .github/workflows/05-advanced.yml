# –®–∞–≥ 5: –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
# –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å —Å–µ–∫—Ä–µ—Ç–∞–º–∏, –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è,
# —É—Å–ª–æ–≤–Ω—ã–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏

name: 05 - –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 2:00 UTC
    - cron: '0 2 * * *'

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ —É—Ä–æ–≤–Ω–µ workflow
env:
  APP_NAME: calculator-api
  ENVIRONMENT: development

jobs:
  advanced-features:
    runs-on: ubuntu-latest
    
    # –£—Å–ª–æ–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è job
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # –ü–æ–ª–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –∫–æ–º–º–∏—Ç–∞–º–∏
          fetch-depth: 0
      
      - name: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
        run: |
          echo "üîç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø—É—Å–∫–µ"
          echo "Event: ${{ github.event_name }}"
          echo "Actor: ${{ github.actor }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Repository: ${{ github.repository }}"
      
      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–æ–≤ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ)
      # - name: Login to Docker Hub
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: –£—Å–ª–æ–≤–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è main –≤–µ—Ç–∫–∏
        if: github.ref == 'refs/heads/main'
        run: |
          echo "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è production –≤–µ—Ç–∫–∏"
          echo "–ú–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –¥–µ–ø–ª–æ–π –Ω–∞ production"
      
      - name: –£—Å–ª–æ–≤–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è PR
        if: github.event_name == 'pull_request'
        run: |
          echo "üîÑ Pull Request –æ–±–Ω–∞—Ä—É–∂–µ–Ω"
          echo "PR Number: ${{ github.event.pull_request.number }}"
          echo "PR Title: ${{ github.event.pull_request.title }}"
      
      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        run: |
          pip install -r requirements.txt
      
      - name: –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ—Å—Ç—å—é
        run: |
          pytest tests/ -v -n auto --dist loadscope
      
      # –°–æ–∑–¥–∞–Ω–∏–µ Release Notes
      - name: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Release Notes
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "# Release Notes" > release-notes.md
          echo "" >> release-notes.md
          echo "## Commit: ${{ github.sha }}" >> release-notes.md
          echo "## Author: ${{ github.actor }}" >> release-notes.md
          echo "" >> release-notes.md
          git log --oneline -10 >> release-notes.md
      
      - name: –ó–∞–≥—Ä—É–∑–∫–∞ Release Notes
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: release-notes
          path: release-notes.md
      
      # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–∑–∞–≥–ª—É—à–∫–∞)
      - name: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        if: success()
        run: |
          echo "‚úÖ Pipeline —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!"
          # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∑–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å:
          # - –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Slack
          # - –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
          # - Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      
      - name: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        if: failure()
        run: |
          echo "‚ùå Pipeline –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π!"
          echo "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏"

  # Job –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏
  environment-demo:
    runs-on: ubuntu-latest
    
    # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ —É—Ä–æ–≤–Ω–µ job
    env:
      JOB_VARIABLE: "job-level-value"
    
    steps:
      - name: –í—ã–≤–æ–¥ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        run: |
          echo "Workflow variable: ${{ env.APP_NAME }}"
          echo "Job variable: ${{ env.JOB_VARIABLE }}"
        env:
          # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–∞ —É—Ä–æ–≤–Ω–µ step
          STEP_VARIABLE: "step-level-value"
      
      - name: –†–∞–±–æ—Ç–∞ —Å GitHub –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞–º–∏
        run: |
          echo "Repository Owner: ${{ github.repository_owner }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Run Number: ${{ github.run_number }}"

  # Job –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ timeout –∏ retry
  timeout-demo:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    
    steps:
      - name: –ó–∞–¥–∞—á–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
        timeout-minutes: 5
        run: |
          echo "–≠—Ç–∞ –∑–∞–¥–∞—á–∞ –Ω–µ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –¥–æ–ª—å—à–µ 5 –º–∏–Ω—É—Ç"
          sleep 2
          echo "–ì–æ—Ç–æ–≤–æ!"
